\Sexpr{set_parent('Tintle1.Rnw')}

\setcounter{chapter}{2}
\Chapter{Estimation: How Large is the Effect?}


\section{Statistical Inference - Confidence Intervals}

\subsection*{Example 3.1: Can Dogs Sniff Out Cancer?}

\begin{enumerate}
  \item
    $H_0$: $\pi = 0.20$
    
    $H_a$: $\pi > 0.20$
    
    Test statistic:  $\hat p = 0.909$ (the sample proportion of 30/33)
	\item
		We simulate a world in which $\pi = 0.20$:
<<Figure3.1,cache=TRUE>>=
sim.cancer <- do(1000) * rflip(33, 0.20)
head(sim.cancer, 3)
dotPlot(~ prop, data = sim.cancer, groups = (prop >= 0.909), width = 0.001)
@
  \item
    Strength of evidence:
<<Figure3.1b>>=
favstats(~ prop, data = sim.cancer)
prop(~ (prop >= 0.909), data = sim.cancer)
@
\end{enumerate}

\begin{enumerate}
  \item
    $H_0$: $\pi = 0.70$
    
    $H_a$: $\pi \neq 0.70$

    Test statistic:  $\hat p = 0.909$ (the sample proportion of 30/33)
  \item
		We simulate a world in which $\pi = 0.70$:
<<Figure3.2, cache=TRUE>>=
sim.cancer2 <- do(1000) * rflip(33, 0.70)
head(sim.cancer2, 3)
dotPlot(~ prop, data = sim.cancer2, groups = (prop <= 0.4545 | prop >= 0.909), width = 0.001)
@
  \item
    Strength of evidence:
<<Figure3.2b>>=
favstats(~ prop, data = sim.cancer2)
prop(~ (prop <= 0.4545 | prop >= 0.909), data = sim.cancer2)
@
\end{enumerate}

\begin{enumerate}
  \item
    $H_0$: $\pi = 0.80$
    
    $H_a$: $\pi \neq 0.80$

    Test statistic:  $\hat p = 0.909$ (the sample proportion of 30/33)
  \item
  	We simulate a world in which $\pi = 0.80$:
<<Figure3.3, cache=TRUE>>=
sim.cancer3 <- do(1000) * rflip(33, 0.80)
head(sim.cancer3, 3)
dotPlot(~ prop, data = sim.cancer3, groups = (prop <= 0.691 | prop >= 0.909), width = 0.001)
@
  \item
    Strength of evidence:
<<Figure3.3b>>=
favstats(~ prop, data = sim.cancer3)
prop(~ (prop <= 0.6667 | prop >= 0.909), data = sim.cancer3)
@
\end{enumerate}

Results of testing different values of probabilities under the null hypothesis:
<<Table3.1>>=
pval(binom.test(30, 33, p = 0.93))
pval(binom.test(30, 33, p = 0.94))
pval(binom.test(30, 33, p = 0.95))
pval(binom.test(30, 33, p = 0.96))
pval(binom.test(30, 33, p = 0.97))
pval(binom.test(30, 33, p = 0.98))
pval(binom.test(30, 33, p = 0.99))
@
% Table 3.2 (skip)

% Confidence Level

% Table 3.3 (skip)

%confidence intervals
%xqnorm(c(0.025, 0.975), 0, 1)

\subsection*{Exploration 3.1: Kissing Right?}

\begin{enumerate}
  \item
    $H_0$: $\pi = 0.5$
    
    $H_a$: $\pi > 0.5$

    Test statistic:  $\hat p = 0.645$ (the sample proportion of 80/124)
  \item
    We simulate a world in which $\pi = 0.5$:
<<Exploration3.1.7, cache=TRUE>>=
sim.kiss <- do(1000) * rflip(124, 0.5)
head(sim.kiss, 3)
dotPlot(~ prop, data = sim.kiss, groups = (prop >= 0.645), width = 0.001)
@
  \item
    Strength of evidence:
<<Exploration3.1.7b>>=
favstats(~ prop, data = sim.kiss)
prop(~ (prop >= 0.645), data = sim.kiss)
@

    Approximate test for proportions:
<<Exploration3.1.7c>>=
prop.test(80, 124, alt = "greater")
@

    Exact test for proportions:
<<Exploration3.1.7d>>=
binom.test(80, 124, alt = "greater")
@
\end{enumerate}

\begin{enumerate}
  \item
    $H_0$: $\pi = 0.6$
    
    $H_a$: $\pi \neq 0.6$

    Test statistic:  $\hat p = 0.645$ (the sample proportion of 80/124)
  \item
    We simulate a world in which $\pi = 0.6$:
<<Exploration3.1.8, cache=TRUE>>=
sim.kiss2 <- do(1000) * rflip(124, 0.6)
head(sim.kiss2, 3)
dotPlot(~ prop, data = sim.kiss2, groups = (prop <= 0.555 | prop >= 0.645), width = 0.001)
@
  \item
    Strength of evidence:
<<Exploration3.1.8b>>=
favstats(~ prop, data = sim.kiss2)
prop(~ (prop <= 0.555 | prop >= 0.645), data = sim.kiss2)
@

    Approximate test for proportions:
<<Exploration3.1.8c>>=
prop.test(80, 124, p = 0.60)
@

    Exact test for proportions:
<<Exploration3.1.8d>>=
binom.test(80, 124, p = 0.60)
@
\end{enumerate}

<<Exploration3.1.11>>=
pval(binom.test(80, 124, p = 0.54))
pval(binom.test(80, 124, p = 0.55))
pval(binom.test(80, 124, p = 0.56))
pval(binom.test(80, 124, p = 0.57))
pval(binom.test(80, 124, p = 0.58))
pval(binom.test(80, 124, p = 0.59))
pval(binom.test(80, 124, p = 0.60))
@

<<Exploration3.1.11b>>=
pval(binom.test(80, 124, p = 0.70))
pval(binom.test(80, 124, p = 0.71))
pval(binom.test(80, 124, p = 0.72))
pval(binom.test(80, 124, p = 0.73))
pval(binom.test(80, 124, p = 0.74))
pval(binom.test(80, 124, p = 0.75))
pval(binom.test(80, 124, p = 0.76))
@

<<Exploration3.1.13>>=
confint(binom.test(80, 124, p = 0.60))
@

<<Exploration3.1.15>>=
confint(binom.test(80, 124, p = 0.60, conf.level = 0.99))
@


\section{2SD and Theory-Based Confidence Intervals for a Single Proportion}

\subsection*{Example 3.2: The Afforable Care Act}

An easy way to find a confidence interval in \R\ is to use \function{prop.test()} or \function{binom.test()} which by default calculates a 95\% confidence interval in its results.

<<Example3.2>>=
binom.test(713, 1034) # 713 = 1034 * 0.69
@

%Figure 3.4 (skip)

\subsubsection*{Theory-Based Approach}

<<Figure3.6, opts.label="fig4">>=
xpnorm(c(-1.645, 1.645), 0, 1)
xpnorm(c(-1.96, 1.96), 0, 1)
xpnorm(c(-2.576, 2.576), 0, 1)
@

Using 2SD method and standard error of the observed sample proportion (Theory-Based Inference applet):
<<Figure3.7, tidy=FALSE>>=
n <- 1034
p.hat <- 0.69; p.hat                   # 0.69 = 713 / 1034
SE <- sqrt( p.hat * (1 - p.hat) / n )  # standard error
MoE <- 1.96 * SE; MoE                  # margin of error
p.hat - MoE                            # lower limit of 95% CI
p.hat + MoE                            # upper limit of 95% CI
@

%but again, more precise to use binom.test (plausible values)

%simulation for confidence interval for the simulation

%Another way to create a 95\% confidence interval is to use the middle 95\% of the bootstrap distribution.
%The \function{cdata()} function can compute this for us as follows:
%<<Example3.23>>=
%cdata(0.95, result, data=Bootstrap)
%@
%This is not exactly the same as the interval of the original sample, but it is pretty close.

\subsection*{Exploration 3.2: American Exceptionalism}

\begin{enumerate}
  \item
    $H_0$: $\pi = 0.775$
    
    $H_a$: $\pi \neq 0.775$

    Test statistic:  $\hat p = 0.80$ (the sample proportion of 85/1019)
  \item
    We simulate a world in which $\pi = 0.775$:
<<Exploration3.2.6, cache=TRUE>>=
sim.amer <- do(1000) * rflip(1019, 0.775)
head(sim.amer, 3)
dotPlot(~ prop, data = sim.amer, groups = (prop <= 0.750 | prop >= 0.80), width = 0.001)
@
  \item
    Strength of evidence:
<<Exploration3.2.6b>>=
favstats(~ prop, data = sim.amer)
prop(~ (prop <= 0.750 | prop >= 0.80), data = sim.amer)
@

    Approximate test for proportions:
<<Exploration3.2.6c>>=
prop.test(815, 1019, p = 0.775)
@

    Exact test for proportions:
<<Exploration3.2.6d>>=
binom.test(815, 1019, p = 0.775)
@
\end{enumerate}

\begin{enumerate}
  \item
    $H_0$: $\pi = 0.5$
    
    $H_a$: $\pi \neq 0.5$

    Test statistic:  $\hat p = 0.80$ (the sample proportion of 815/1019)
  \item
    We simulate a world in which $\pi = 0.5$:
<<Exploration3.2.8,cache=TRUE>>=
sim.amer2 <- do(1000) * rflip(1019, 0.5)
head(sim.amer2, 3)
dotPlot(~ prop, data = sim.amer2, groups = (prop <= 0.20 | prop >= 0.80), width = 0.001)
@
  \item
    Strength of evidence:
<<Exploration3.2.8b>>=
favstats(~ prop, data = sim.amer2)
prop(~ (prop <= 0.20 | prop >= 0.80), data = sim.amer2)
@

    Approximate test for proportions:
<<Exploration3.2.8c>>=
prop.test(815, 1019)
@

    Exact test for proportions:
<<Exploration3.2.8d>>=
binom.test(815, 1019)
@
\end{enumerate}

Finding the standard deviation using simulated deviation:
<<Exploration3.2.9>>=
sd <- sd(~ prop, data = sim.amer); sd
z <- (0.80 - 0.775) / sd; z
xpnorm(0.8, 0.775, sd, lower.tail = FALSE, plot = FALSE)
@

Determining a 95\% confidence interval using the 2SD Method and standard deviation of the null distribution:
<<Exploration3.2.11, tidy=FALSE>>=
p.hat <- 0.80         # given sample proportion
sd                    # previously found simulated standard deviation
MoE <- 2 * sd; MoE    # margin of error for 95% CI
p.hat - MoE           # lower limit of 95% CI
p.hat + MoE           # upper limit of 95% CI
@

Determining a 95\% confidence interval using the 2SD Method and standard error of the observed sample proportion:
<<Exploration3.2.12, tidy=FALSE>>=
n <- 1019
p.hat <- 0.80         # given sample proportion
SE <- sqrt(p.hat * (1 - p.hat) / n); SE
MoE <- 2 * SE; MoE    # margin of error for 95% CI
p.hat - MoE           # lower limit of 95% CI
p.hat + MoE           # upper limit of 95% CI
@

Determining a 95\% confidence interval using more accurate multipliers and standard error of the observed sample proportion (Theory-Based Inference applet):
<<Exploration3.2.13, tidy=FALSE>>=
n <- 1019
p.hat <- 0.80         # given sample proportion
SE <- sqrt(p.hat * (1 - p.hat) / n); SE
MoE <- 1.96 * SE; MoE # margin of error for 95% CI with more accurate multiplier
p.hat - MoE           # lower limit of 95% CI
p.hat + MoE           # upper limit of 95% CI
@

Another way to create a 95\% confidence interval is to use the middle 95\% of the simulated null distribution. This is not exactly the same as the interval found by the 2SD Method, but it is very close.
<<Exploration3.2.13b>>=
cdata(0.95, prop, data = sim.amer)
@
% include cdata? is it counting values?

The \function{binom.test} calculates the exact confidence interval for any confidence level:
<<Exploration3.2.13c>>=
binom.test(815, 1019, p = 0.775, conf.level = 0.95)
binom.test(815, 1019, p = 0.775, conf.level = 0.99)
binom.test(815, 1019, p = 0.775, conf.level = 0.90)
@
Note that the specified $\pi$, the \option{p = 0.775}, only matters in calculating the p-value and does not affect the confidence interval.


\section{2SD and Theory-Based Confidence Intervals for a Single Mean}

\subsection*{Example 3.3: Used Cars}

<<Figure3.9>>=
head(UsedCars)
favstats(~ Price, data = UsedCars)
histogram(~ Price, data = UsedCars, type="count", width = 2000)
@

Determining a 95\% confidence interval using the 2SD Method and standard error of the sample population:
<<Example3.3,tidy=FALSE>>=
n <- nrow(UsedCars); n
mean <- mean(~ Price, data = UsedCars); mean
sd <- sd(~ Price, data = UsedCars); sd
SE <- sd / sqrt(n)
MoE <- 2 * SE; MoE    # margin of error for 95% CI
mean - MoE            # lower limit of 95% CI
mean + MoE            # upper limit of 95% CI
@

\subsubsection*{Theory-based approach}

<<Figure3.10>>=
confint(t.test(~ Price, data = UsedCars))
@

<<Figure3.11>>=
confint(t.test(~ Price, data = UsedCars, conf.level = 0.90))
confint(t.test(~ Price, data = UsedCars, conf.level = 0.99))
@

\subsection*{Exploration 3.3: Sleepless Nights? (continued)}

<<Exploration3.3.1>>=
head(SleepTimes)
favstats(~SleepHrs, data = SleepTimes)
@

Determining a 95\% confidence interval using the 2SD Method and standard error of the sample population:
<<Exploration3.3.6,tidy=FALSE>>=
n <- nrow(SleepTimes); n
mean <- mean(~ SleepHrs, data = SleepTimes); mean
sd <- sd(~ SleepHrs, data = SleepTimes); sd 
SE <- sd / sqrt(n)
MoE <- 2 * SE; MoE    # margin of error for 95% CI
mean - MoE            # lower limit of 95% CI
mean + MoE            # upper limit of 95% CI
@

\subsubsection{Theory-based approach}

<<Exploration3.3.8>>=
confint(t.test(~ SleepHrs, data = SleepTimes))
@

<<Exploration3.3.9>>=
dotPlot(~SleepHrs, data = SleepTimes, width = 1)    # to check the distribution
@

\section{Factors That Affect the Width of a Confidence Interval}

\subsection*{Example 3.4: The Afforable Care Act (continued)}

<<Table3.5>>=
confint(binom.test(713, 1034, conf.level = 0.90))    # 1034 * 0.69 = 713
confint(binom.test(713, 1034, conf.level = 0.95))
confint(binom.test(713, 1034, conf.level = 0.99))
@

\subsubsection*{Sample size}
% qnorm(level, prop, sd)
<<Figure3.12>>=
confint(binom.test(70, 100))
confint(binom.test(140, 200))
confint(binom.test(280, 400))
@
% note the default conf.level
% precise vs. accurate

\subsubsection*{Optional: Effect of sample proportion}

Sample proportions will affect confidence intervals calculated by using accurate multipliers and the standard error of the observed sample proportion (Theory-Based Inference applet). However, the sample proportions will not affect confidence intervals found by using the exact test for proportions, \function{binom.test}.
<<Figure3.13>>=
confint(binom.test(838, 1034))
MoE838 <- 0.8339078 - 0.7852004; MoE838
confint(binom.test(196, 1034))
MoE196 <- 0.2147996 - 0.1660922; MoE196
@

\subsection*{Exploration 3.4: Holiday Spending Habits}

Determining a 95\% confidence interval using the 2SD Method and standard error of the sample population:
<<Exploration3.4.5,tidy=FALSE>>=
n <- 1039
mean <- 704
sd <- 150
SE <- sd / sqrt(n)
MoE <- 2 * SE; MoE    # margin of error for 95% CI
mean - MoE            # lower limit of 95% CI
mean + MoE            # upper limit of 95% CI
@

<<Exploration3.4.6,tidy=FALSE>>=
n <- 1039
mean <- 704
sd <- 300
SE <- sd / sqrt(n)
MoE <- 2 * SE; MoE    # margin of error for 95% CI 
mean - MoE            # lower limit of 95% CI
mean + MoE            # upper limit of 95% CI
@

%<<>>=
%qt(c(0.025, 0.975), df = 1038, ncp = 704)
%@

\subsubsection*{The impact of sample size}

<<Exploration3.4.8,tidy=FALSE>>=
n <- 477
mean <- 704
sd <- 300
SE <- sd / sqrt(n)
MoE <- 2 * SE; MoE    # margin of error for 95% CI
mean - MoE            # lower limit of 95% CI
mean + MoE            # upper limit of 95% CI
@

%<<>>=
%qt(c(0.025, 0.975), df = 476, ncp = 704)
%@

\subsubsection{Exploration 3.4B: Reese's Pieces}

% "Simulating Confidence Intervals" applet missing

Simulate 1 sample proportion and calculate the 95\% confidence interval:
<<Exploration3.4B.4>>=
sample.CI <- CIsim(100, samples = 1, rdist = rbinom, args = list(size = 1, prob = 0.5), method = binom.test, method.args = list(success = 1), verbose = FALSE, estimand = 0.5)
sample.CI
@

Simulate 100 sample proportions and calculate the 95\% confidence intervals:
<<Exploration3.4B.5, cache=TRUE>>=
sim.CI <- CIsim(100, samples = 100, rdist = rbinom, args = list(size = 1, prob = 0.5), method = binom.test, method.args = list(success = 1), verbose = FALSE, estimand = 0.5)
@

Proportion of intervals produced that do not contain $\pi = 0.5$:
<<Exploration3.4B.5b>>=
prop(~ cover, data = sim.CI)
@

Plot the 95\% confidence intervals of the simulation of 100 sample proportions:
<<Exploration3.4B.5c, message=FALSE,opts.label="fig1">>=
require(Hmisc)
xYplot(Cbind(estimate, lower, upper) ~ sample, data = sim.CI, par.settings = col.mosaic(), groups = cover)
@

Simulate 1000 sample proportions and calculate the 95\% confidence intervals:
<<Exploration3.4B.5d, cache=TRUE, tidy = FALSE>>=
sim.CI2 <- CIsim(100, samples = 1000, rdist = rbinom, 
                 args = list(size = 1, prob = 0.5), method = binom.test, 
                 method.args = list(success = 1), verbose = FALSE, 
                 estimand = 0.5)
@

Proportion of intervals produced that do not contain $\pi = 0.5$:
<<Exploration3.4B.5e>>=
prop(~ cover, data = sim.CI2)
@

Simulate 1000 sample proportions and calculate the 90\% confidence intervals:
<<Exploration3.4B.6,cache=TRUE, tidy=FALSE>>=
sim.CI3 <- CIsim(100, samples = 1000, rdist = rbinom, 
                 args = list(size = 1, prob = 0.5), conf.level = 0.90, 
                 method = binom.test, method.args = list(success = 1), 
                 verbose = FALSE, estimand = 0.5)
@

Proportion of intervals produced that do not contain $\pi = 0.5$:
<<Exploration3.4B.6b>>=
prop(~ cover, data = sim.CI3)
@

Simulate 1000 sample proportions and calculate the 90\% confidence intervals (sample size = 400):
<<Exploration3.4B.6c, cache=TRUE, tidy = FALSE>>=
sim.CI4 <- CIsim(400, samples = 100, rdist = rbinom, 
                 args = list(size = 1, prob = 0.5), conf.level = 0.90, 
                 method = binom.test, method.args = list(success = 1), 
                 verbose = FALSE, estimand = 0.5)
@

Proportion of intervals produced that do not contain $\pi = 0.5$:
<<Exploration3.4B.6d>>=
prop(~ cover, data = sim.CI4)
@


\section{Cautions When Conducting Inference}
\begin{enumerate}
  \item
    $H_0$: $\pi = 0.3645$
    
    $H_a$: $\pi > 0.3645$

    Test statistic:  $\hat p = 0.41$ (the sample proportion)
  \item
		We simulate a world in which $\pi = 0.3645$:
<<Figure3.14,cache=TRUE>>=
sim.obama <- do(1000) * rflip(1000, 0.3645)
head(sim.obama, 3)
dotPlot(~ prop, data = sim.obama, groups = (prop >= 0.41), width = 0.001)
@
  \item
    Strength of evidence:
<<Figure3.14b>>=
favstats(~ prop, data = sim.obama)
prop(~ (prop >= 0.41), data = sim.obama)
@
\end{enumerate}

\subsection*{Exploration 3.5A: Voting for President}

Finding the 99\% confidence interval using the exact test for proportions:
<<Exploration3.5A.3>>=
confint(binom.test(1783, 2613, conf.level = 0.99))
@

\subsubsection*{Another famous case of problems in Presidential election polling}

Finding the 99\% confidence interval using the exact test for proportions:
<<Exploration3.5A.9>>=
confint(binom.test(1368000, 2400000, conf.level = 0.999)) # 1368000 = 2400000 * 0.57
@

\subsection*{Example 3.5B: Parapsychology Studies (continued)}

<<Example3.5B>>=
confint(binom.test(709, 2124, conf.level = 0.95))
confint(binom.test(709, 2124, conf.level = 0.99))
@

\begin{enumerate}
  \item
    $H_0$: $\pi = 0.25$
    
    $H_a$: $\pi > 0.25$

    Test statistic:  $\hat p = 0.38$ (the sample proportion of 19/50)
  \item
    We simulate a world in which $\pi = 0.25$:
<<Figure3.15,cache=TRUE>>=
sim.esp2 <- do(10000) * rflip(50, 0.25)
head(sim.esp2, 3)
dotPlot(~ prop, data = sim.esp2, groups = (prop >=0.38), width = 0.01, cex = 10)
prop(~ (prop >= 0.38), data = sim.esp2)
@
\end{enumerate}
    
\begin{enumerate}
  \item
    $H_0$: $\pi = 1/3$
    
    $H_a$: $\pi > 1/3$

    Test statistic:  $\hat p = 0.38$ (the sample proportion of 19/50)
  \item
    We simulate a world in which $\pi = 1/3$:
<<Figure3.16, cache=TRUE>>=
sim.esp3 <- do(10000) * rflip(50, 1/3)
head(sim.esp3, 3)
dotPlot(~ prop, data = sim.esp3, groups = (prop >=0.38), width = 0.01, cex = 10)
prop(~ (prop >= 0.38), data = sim.esp3)
@
\end{enumerate}

\begin{enumerate}
  \item
    $H_0$: $\pi = 1/2$
    
    $H_a$: $\pi > 1/2$
    
    Test statistic:  $\hat p = 0.38$ (the sample proportion of 19/50)
  \item
    We simulate a world in which $\pi = 1/2$:
<<Figure3.17,cache=TRUE>>=
sim.esp4 <- do(10000) * rflip(50, 1/2)
head(sim.esp4, 3)
dotPlot(~ prop, data = sim.esp4, groups = (prop >=0.38), width = 0.01, cex = 10)
prop(~ (prop >= 0.38), data = sim.esp4)
@
\end{enumerate}

\subsection{Exploration 3.5B: Cat Households}

\begin{enumerate}
  \item
    $H_0$: $\pi = 1/3$
    
    $H_a$: $\pi < 1/3$
    
    Test statistic:  $\hat p = 0.324$ (the sample proportion of 15228/47000)
  \item
    Exact test for proportions:
<<Exploration3.5B.3>>=
binom.test(15228, 47000, p = 1/3, conf.level = 0.999, alt = "less")
binom.test(15228, 47000, p = 1/3, alt = "less")
@
  \item
    We simulate a world in which $\pi = 1/3$:
<<Exploration3.5B.9, cache=TRUE>>=
sim.pets <- do(1000) * rflip(100, 1/3)
head(sim.pets, 3)
@
% power

We could use trial-and-error to determine values of the sample proportion that would produce a p-value of less than 0.05. \R\ can quickly calculate try possible values that would result in the significance level of 0.05 but we can also have \R\ calculate them for us.
<<Exploration3.5B.9b>>=
cdata(0.95, prop, data = sim.pets)
@
\end{enumerate}

\begin{enumerate}
  \item
    $H_0$: $\pi = 0.30$
    
    $H_a$: $\pi < 0.30$
    
    Test statistic:  $\hat p = 0.243$ (the sample proportion)
  \item
    We simulate a world in which $\pi = 0.30$:
<<Exploration3.5B.11,cache=TRUE>>=
sim.pets2 <- do(1000) * rflip(100, 0.30)
head(sim.pets2, 3)
prop(~ (prop <=0.243), data = sim.pets2)
@
% power
<<Exploration3.5B.11b>>=
cdata(0.90, prop, data = sim.pets2)
@
\end{enumerate}

% simulate with different confidence level
% power
% simulate with different sample size
% power
% simulate with different proportion size

%<<>>=
%n = 30 # sample size
%sigma = 120 # population sd
%sem = sigma/sqrt(n) # SE
%alpha = 0.05 # significance level
%mu0 = 10000 # hypothetical lower bound
%q = qnorm(alpha, mean = mu0, sd = sem) # so long as the sample mean is greter than 9964 in a hypothesis test, the null will not be rejected. Since we assume that the actual population mean is 9950, se can compute the prob of the sample mean above 9964, and thus find the prob of type ii error
%mu = 9950
%pnorm(q, mean = mu, sd = sem, lower.tail = FALSE)
%@

<<>>=
confint(binom.test(33, 100, p = 1/3))
binom.test(24, 100, p = 0.30, alt = "less")
confint(binom.test(33, 100, p = 1/3, conf.level = 0.90))
binom.test(25, 100, p = 0.30, alt = "less", conf.level = 0.90)
confint(binom.test(167, 500, p = 1/3))
binom.test(146, 500, p = 0.30, alt = "less")
confint(binom.test(33, 100, p = 1/3))
binom.test(24, 100, p = 0.20, alt = "less")
@
